#
#If you use Spring Boot's developer tools, it comes with H2 Console enabled by default. It can be accessed from /h2-console/. On the login interface, for input JDBC URL use value jdbc:h2:mem:testdb. Pay attention to mem string.
#
#If you don't use Spring Boot's developer tools, you can enable the console in application.properties using spring.h2.console.enabled=true. This will enable console under /h2-console. If you want to change the URL then you can add another entry with spring.h2.console.path=my_console_path.
#
#The default schema name is testdb.
#
# Tip - Make sure that you use jdbc:h2:mem:testdb as JDBC URL
#

# Enabling H2 Console
spring.h2.console.enabled=true

# Logging with Logback + SLF4J --> Implemented already in spring boot
#logging.file=${LOG_PATH}/log-file.log
#logging.path=logs
#logging.file=${logging.path}/log.log
#logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n
logging.level.root=debug
logging.config=classpath:logback-spring.xml